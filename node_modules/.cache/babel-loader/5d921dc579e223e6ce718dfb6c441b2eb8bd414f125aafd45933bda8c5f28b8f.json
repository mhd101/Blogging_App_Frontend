{"ast":null,"code":"var _jsxFileName = \"/home/mhd101/Web_Development/Projects/mern-blog/client/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const register = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('Registration Successfull !!');\n      setRedirect(true);\n    } else {\n      alert('Registration Failed!!');\n    }\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"akJCtea06E3X9APQvCKcOXGIZ6s=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","register","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","Navigate","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/mhd101/Web_Development/Projects/mern-blog/client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\"\n\n\nexport const RegisterPage = () => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [redirect, setRedirect] = useState(false)\n\n    const register = async (e) => {\n        e.preventDefault();\n        const response = await fetch('http://localhost:4000/register', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: { 'content-type': 'application/json' },\n        })\n\n        if(response.status === 200){\n            alert('Registration Successfull !!')\n            setRedirect(true)\n            \n        } else {\n            alert('Registration Failed!!')\n        }\n    }\n\n    if(redirect) {\n        return <Navigate to={'/login'} />\n    }\n\n    return (\n\n        <form className=\"register\" onSubmit={register}>\n            <h1>Register</h1>\n            <input type='text'\n                placeholder=\"Enter Username\"\n                value={username}\n                onChange={e => setUsername(e.target.value)} />\n            <input type='password'\n                placeholder=\"Enter Password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)} />\n            <button>Register</button>\n        </form>\n\n    )\n}\n\nexport default RegisterPage"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMW,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5Ca,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CAAC,CAAC;IAEF,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MACvBC,KAAK,CAAC,6BAA6B,CAAC;MACpCZ,WAAW,CAAC,IAAI,CAAC;IAErB,CAAC,MAAM;MACHY,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC;EAED,IAAGb,QAAQ,EAAE;IACT,oBAAOP,OAAA,CAACqB,QAAQ;MAACC,EAAE,EAAE;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACrC;EAEA,oBAEI1B,OAAA;IAAM2B,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEnB,QAAS;IAAAoB,QAAA,gBAC1C7B,OAAA;MAAA6B,QAAA,EAAI;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjB1B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MACdC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAEvB,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClD1B,OAAA;MAAO8B,IAAI,EAAC,UAAU;MAClBC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAEvB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClD1B,OAAA;MAAA6B,QAAA,EAAQ;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAGf,CAAC;AAAAxB,EAAA,CA3CYD,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AA6CzB,eAAeA,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}